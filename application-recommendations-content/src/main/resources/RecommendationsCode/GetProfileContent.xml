<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>RecommendationsCode</web>
  <name>GetProfileContent</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>RecommendationsCode.Pushscript</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1432538333000</creationDate>
  <date>1432819330000</date>
  <contentUpdateDate>1432819308000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>import java.text.Normalizer;
import java.util.regex.Pattern;

class ContentForProfile {

  def getContentFromDoc(source, xwiki) {

    def object = xwiki.parseGroovyFromPage("RecommendationsCode.StopWords")
    def sourceDoc = xwiki.getDocument(source)
    def stopWordsList = object.getStopWords(sourceDoc.getRealLanguage())
    def content = sourceDoc.getRenderedContent().replaceAll("&lt;br.*?&gt;"," ").replaceAll("&lt;.*?&gt;","")

    // Remove accents
    String nfdNormalizedString = Normalizer.normalize(content, Normalizer.Form.NFD); 
    Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
    content = pattern.matcher(nfdNormalizedString).replaceAll("");
    // Remove punctuation
    content = content.replaceAll("&amp;nbsp", " ").trim();
    content = content.replaceAll("('|‘|’|\\s|\\p{Punct}|«|»)", " ").toLowerCase();
    content = content.replaceAll(" +", " ").trim();
    content = content.replaceAll(" [0-9]+ ", " ").trim();
    // Count differents words
    def contentSplit = content.split(" ");
    def map = new HashMap&lt;&gt;();
    for (words in contentSplit ) {
      Integer n = map.get(words);
      n = (n == null) ? 1 : ++n;
      map.put(words, n);
    }
    // Remove stopwords
    for (stopword in stopWordsList) {
      map.remove(stopword);
    }
    // Select the 5 most used words
    def i = 1
    def mostFrequent = ""
    def wordsList = []
    for (i = 1; i&lt;=5; i++) {
      mostFrequent = map.keySet()[1]
      for (word in map.keySet()) {
        if(map.get(word) &gt; map.get(mostFrequent)) {
          mostFrequent = word
        }
      }
      if(mostFrequent) {
        wordsList.add(mostFrequent)
      }
      map.remove(mostFrequent)
    }
    return wordsList
  }

  def getContentFromDoc(source, xwiki, context) {

    def object = xwiki.parseGroovyFromPage("RecommendationsCode.StopWords", context)
    def sourceDoc = xwiki.getDocument(source, context)
    def stopWordsList = object.getStopWords(sourceDoc.getRealLanguage())
    def content = sourceDoc.getRenderedContent(context).replaceAll("&lt;br.*?&gt;"," ").replaceAll("&lt;.*?&gt;","")

    // Remove accents
    String nfdNormalizedString = Normalizer.normalize(content, Normalizer.Form.NFD); 
    Pattern pattern = Pattern.compile("\\p{InCombiningDiacriticalMarks}+");
    content = pattern.matcher(nfdNormalizedString).replaceAll("");
    // Remove punctuation
    content = content.replaceAll("&amp;nbsp", " ").trim();
    content = content.replaceAll("('|‘|’|\\s|\\p{Punct}|«|»)", " ").toLowerCase();
    content = content.replaceAll(" +", " ").trim();
    content = content.replaceAll(" [0-9]+ ", " ").trim();
    // Count differents words
    def contentSplit = content.split(" ");
    def map = new HashMap&lt;&gt;();
    for (words in contentSplit ) {
      Integer n = map.get(words);
      n = (n == null) ? 1 : ++n;
      map.put(words, n);
    }
    // Remove stopwords
    for (stopword in stopWordsList) {
      map.remove(stopword);
    }
    // Select the 5 most used words
    def i = 1
    def mostFrequent = ""
    def wordsList = []
    for (i = 1; i&lt;=5; i++) {
      mostFrequent = map.keySet()[1]
      for (word in map.keySet()) {
        if(map.get(word) &gt; map.get(mostFrequent)) {
          mostFrequent = word
        }
      }
      if(mostFrequent) {
        wordsList.add(mostFrequent)
      }
      map.remove(mostFrequent)
    }
    return wordsList
  }

}</content>
</xwikidoc>
